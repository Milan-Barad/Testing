  
{% style %}
  .collection-tabbing {
    padding: 100px 0;
  }
  .collection-tabbing .page-width {
    max-width: 1400px;
    padding: 0 15px;
    margin: 0 auto;
    display: block;
    width: 100%;
  }
  .collection-tabbing .collection-list .product-list {
    width: 100%;
  }
  .collection-tabbing .collection-list .product {
    margin: 0 15px;
  }
  .collection-tabbing .collection-list .slick-track {
    margin: 0 -15px;
  }
  .collection-tabbing .tab {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 30px;
    margin-bottom: 30px;
  }
  .collection-tabbing .tab button {
    padding: 10px 50px;
    font-size: 20px;
    line-height: 20px;
    letter-spacing: 0;
    font-weight: 700;
    border-radius: 8px;
    cursor: pointer;
    background: transparent;
    border: 1px solid #000;
  }
  .collection-tabbing .tab button.active {
    background: #c3c3c3;
    border: 1px solid transparent;
  }
{% endstyle %}

<section class="collection-tabbing">
  <div class="page-width">
    <div class="collection-list">
      <div class="tab">
        {%- for block in section.blocks -%}
          <button class="tablinks" onclick="openCity(event, '{{ block.id }}')" {% if forloop.first %}id="defaultOpen"{% endif %}>
            {{ block.settings.tab_title | escape }}
          </button>
        {%- endfor -%}
      </div>

      {%- for block in section.blocks -%}
        <div id="{{ block.id }}" class="tabcontent">
          {%- assign collection = block.settings.collection -%}
          {%- if collection.products.size > 0 -%}
            <div class="product-list">
              {%- for product in collection.products -%}
                <div class="product">
                  {% render 'product-card-1', product: product, image_ratio: image_ratio, show_vendor: show_vendor, index: forloop.index, animated: animated, animation_effect: animation_effect %}
                </div>
              {%- endfor -%}
            </div>
          {%- endif -%}
        </div>
      {%- endfor -%}
    </div>
  </div>
</section>

<script>
  function openCity(evt, cityName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
      tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
      tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(cityName).style.display = "block";
    evt.currentTarget.className += " active";
  }
  document.getElementById("defaultOpen").click();
</script>

<script type="text/javascript">
  function customSlider() {
    $('.collection-tabbing .product-list').slick({
      infinite: true,
      dots: false,
      slidesToShow: 5,
      slidesToScroll: 1
    });
  }

  $(document).ready(function() {
    customSlider();
    document.querySelectorAll(".tablinks").forEach(item => {
      item.addEventListener("click", function() {
        if ($('.collection-tabbing .product-list').hasClass('slick-initialized')) {
          $('.collection-tabbing .product-list').slick('unslick');
        }
        customSlider();
      });
    });
  });
</script>

{% schema %}
  {
    "name": "Collection Tabbing",
    "settings": [
      {
        "type": "collection",
        "id": "collection",
        "label": "Collection"
      }
    ],
    "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "text",
          "id": "tab_title",
          "label": "Tab Title",
          "default": "Tab"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets" :[
    {
      "name":"Collection Tabbing"
    }
  ]
}
{% endschema %}