<style>
  .lab-results-section {
    padding: 80px 15px;
    max-width: 1300px;
    margin: 0 auto;
  }
  .lab-results-section__heading {
    font-family: "Bakbak One", sans-serif;
    font-size: 28px;
    font-weight: 700;
    padding-bottom: 20px;
  }
  .lab-results-section__tabs {
    display: flex;
    border: 1px solid #000;
    border-bottom: none;
    background: #fff;
  }
  .lab-results-section__tab {
    padding: 12px;
    cursor: pointer;
    font: 700 18px "Bakbak One", sans-serif;
    background: #fff;
    border: none;
    border-right: 1px solid #000;
    transition: background 0.3s;
  }
  .lab-results-section__tab.is-active {
    background: #c8b9b9;
  }
  .lab-results-section__panel {
    display: none;
    border: 1px solid #000;
    padding: 12px;
    background: #fff;
  }
  .lab-results-section__panel.is-active {
    display: block;
  }
  .lab-results-section__accordion {
    border: 1px solid #000;
    margin: 15px 0;
  }
  .lab-results-section__accordion-header {
    width: 100%;
    text-align: left;
    padding: 15px;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    font-weight: bold;
    background: transparent;
    border: none;
  }
  .lab-results-section__accordion-header:after {
    content: "";
    border: solid #000;
    border-width: 0 2px 2px 0;
    width: 8px;
    height: 8px;
    transform: rotate(45deg);
  }
  .lab-results-section__accordion-header[aria-expanded="true"]::after {
    transform: rotate(225deg);
  }
  .lab-results-section__accordion-title {
    font: 500 18px "Bakbak One", sans-serif;
  }
  .lab-results-section__accordion-content {
    padding: 15px;
    border-top: 1px solid #000;
  }
  .lab-results-section__batch-list {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  .lab-results-section__batch-list li {
    margin-bottom: 20px;
    font: 500 18px "Bakbak One", sans-serif;
  }
  .lab-results-section__batch-list a {
    color: #000;
    font-weight: 700;
  }
  .lab-results-section__empty {
    margin-top: 10px;
    opacity: 0.7;
    font-size: 14px;
  }
</style>

<section id="lab-results-{{ section.id }}" class="lab-results-section">
  <div class="lab-results-section__details">
    {% if section.settings.heading != blank %}
      <h2 class="lab-results-section__heading">{{ section.settings.heading }}</h2>
    {% endif %}
    {% assign unique_tabs = '' %}
    {% for block in section.blocks %}
      {% if block.type == 'accordion' %}
        {% assign tab_target = block.settings.tab_target %}
        {% unless unique_tabs contains tab_target %}
          {% assign unique_tabs = unique_tabs | append: tab_target | append: '||' %}
        {% endunless %}
      {% endif %}
    {% endfor %}
    {% assign unique_tabs_array = unique_tabs | split: '||' | uniq %}
    {% if unique_tabs_array.size > 0 %}
      <div class="lab-results-section__tabs" role="tablist">
        {% for tab in unique_tabs_array %}
          {% if tab != blank %}
            {% assign tab_label = tab %}
            {% for block in section.blocks %}
              {% if block.type == 'accordion' and block.settings.tab_target == tab %}
                {% assign tab_label = block.settings.tab_label | default: tab %}
                {% break %}
              {% endif %}
            {% endfor %}
            <button class="lab-results-section__tab{% if forloop.first %} is-active{% endif %}" role="tab" aria-selected="{% if forloop.first %}true{% else %}false{% endif %}" aria-controls="lr-{{ section.id }}-{{ tab | handleize }}" data-tab="{{ tab | handleize }}">{{ tab_label }}</button>
          {% endif %}
        {% endfor %}
      </div>
    {% endif %}
    {% for tab in unique_tabs_array %}
      {% if tab != blank %}
        <div id="lr-{{ section.id }}-{{ tab | handleize }}" class="lab-results-section__panel{% if forloop.first %} is-active{% endif %}" role="tabpanel" tabindex="0">
          {% for block in section.blocks %}
            {% if block.type == 'accordion' and block.settings.tab_target == tab %}
              <div class="lab-results-section__accordion" {{ block.shopify_attributes }}>
                <button class="lab-results-section__accordion-header" type="button" aria-expanded="false">
                  <span class="lab-results-section__accordion-title">{{ block.settings.title | escape }}</span>
                </button>
                <div class="lab-results-section__accordion-content" hidden>
                  <ul class="lab-results-section__batch-list">
                    {{ block.settings.batch_list_html }}
                  </ul>
                </div>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      {% endif %}
    {% endfor %}
  </div>
</section>

<script>
  (function() {
    const root = document.getElementById('lab-results-{{ section.id }}');
    if (!root) {
      console.error('Root element not found for section: lab-results-{{ section.id }}');
      return;
    }

    const tabs = root.querySelectorAll('.lab-results-section__tab');
    const panels = root.querySelectorAll('.lab-results-section__panel');
    console.log('Found tabs:', tabs.length, 'Found panels:', panels.length);

    tabs.forEach(tab => {
      tab.addEventListener('click', () => {
        tabs.forEach(t => {
          t.classList.remove('is-active');
          t.setAttribute('aria-selected', 'false');
        });
        tab.classList.add('is-active');
        tab.setAttribute('aria-selected', 'true');
        panels.forEach(p => p.classList.remove('is-active'));
        const panel = root.querySelector(`#lr-{{ section.id }}-${tab.getAttribute('data-tab')}`);
        if (panel) {
          panel.classList.add('is-active');
        } else {
          console.error('Panel not found for tab:', tab.getAttribute('data-tab'));
        }
      });
    });

    panels.forEach(panel => {
      const accordions = panel.querySelectorAll('.lab-results-section__accordion');
      console.log('Found accordions in panel:', accordions.length, 'Panel ID:', panel.id);
      accordions.forEach(acc => {
        const btn = acc.querySelector('.lab-results-section__accordion-header');
        const content = acc.querySelector('.lab-results-section__accordion-content');
        if (!btn || !content) {
          console.error('Accordion button or content missing in:', acc);
          return;
        }
        btn.addEventListener('click', () => {
          const expanded = btn.getAttribute('aria-expanded') === 'true';
          console.log('Accordion clicked:', btn.querySelector('.lab-results-section__accordion-title').textContent, 'Expanded:', expanded);
          acc.parentElement.querySelectorAll('.lab-results-section__accordion').forEach(otherAcc => {
            if (otherAcc !== acc) {
              otherAcc.querySelector('.lab-results-section__accordion-header').setAttribute('aria-expanded', 'false');
              otherAcc.querySelector('.lab-results-section__accordion-content').setAttribute('hidden', '');
            }
          });
          btn.setAttribute('aria-expanded', !expanded);
          content.toggleAttribute('hidden', expanded);
        });
      });
    });
  })();
</script>

{% schema %}
  {
    "name": "Tab with accordion",
    "settings": [
      {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "Check Out Our Lab Test Results:"
      }
    ],
    "blocks": [
      {
        "type": "accordion",
        "name": "Accordion",
        "settings": [
          {
            "type": "text",
            "id": "tab_target",
            "label": "Tab ID"
          },
          {
            "type": "text",
            "id": "tab_label",
            "label": "Tab title"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Question"
          },
          {
            "type": "richtext",
            "id": "batch_list_html",
            "label": "Answer"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Tab with accordion"
      }
    ]
  }
{% endschema %}