
<style>
  .tab-container {
    max-width: 600px;
    margin: 20px auto;
    border: 1px solid #ccc;
    font-family: Arial, sans-serif;
  }
  .tab-buttons {
    display: flex;
    border-bottom: 1px solid #ccc;
  }
  .tab-button {
    flex: 1;
    padding: 10px;
    cursor: pointer;
    background: #f4f4f4;
    border: none;
    outline: none;
    transition: background 0.3s;
  }
  .tab-button:hover {
    background: #ddd;
  }
  .tab-button.active {
    background: #fff;
    font-weight: bold;
    border-bottom: 2px solid #333;
  }
  .tab-content {
    display: none;
    padding: 15px;
  }
  .tab-content.active {
    display: block;
  }
  .accordion {
    width: 100%;
    margin: 10px 0;
  }
  .accordion-item {
    border: 1px solid #ddd;
    margin-bottom: 5px;
    border-radius: 4px;
    overflow: hidden;
  }
  .accordion-header {
    padding: 12px;
    cursor: pointer;
    background: #f4f4f4;
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: all 0.3s;
  }
  .accordion-header:hover {
    background: #ddd;
  }
  .accordion-header::after {
    content: '+';
    font-size: 18px;
    transition: transform 0.3s ease;
  }
  .accordion-header.active::after {
    content: 'âˆ’';
  }
  .accordion-panel {
    max-height: 0;
    overflow: hidden;
    opacity: 0;
    padding: 0 12px;
    transition: max-height 0.4s ease,
                opacity 0.4s ease,
                padding 0.3s ease;
  }
  .accordion-panel.active {
    opacity: 1;
  }
</style>

  <div class="tab-buttons">
    {% for block in section.blocks %}
      {% if block.type == 'tab' %}
        <button class="tab-button" onclick="openTab(event, 'tab-{{ block.settings.tab_id }}')">
          {{ block.settings.tab_title }}
        </button>
      {% endif %}
    {% endfor %}
  </div>

<section class="accordion-section">
  <div class="page-with">
    <div class="section-title">
      <h2>{{ section.settings.title }}</h2>
    </div>
    <div class="accordion-list">
      {% for block in section.blocks %}
        {% if block.settings.question != blank %}
          <div class="accordion-box">
              <h6 class="accordion-header">
                How Can I Help You?
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="15" viewBox="0 0 16 15" fill="none">
                  <path class="vertical-line" d="M8 14.3734C7.46055 14.3734 7.02344 13.9363 7.02344 13.3969V0.976562C7.02344 0.437109 7.46055 0 8 0C8.53945 0 8.97656 0.437109 8.97656 0.976562V13.3969C8.97656 13.9363 8.53945 14.3734 8 14.3734Z" fill="black"/>
                  <path d="M14.2094 8.16309H1.78906C1.24961 8.16309 0.8125 7.72598 0.8125 7.18652C0.8125 6.64707 1.24961 6.20996 1.78906 6.20996H14.2094C14.7488 6.20996 15.1859 6.64707 15.1859 7.18652C15.1859 7.72598 14.7488 8.16309 14.2094 8.16309Z" fill="black"/>
                </svg>
              </h6>
              <div class="accordion-content">
                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
              </div>
            </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
      const headers = document.querySelectorAll(".accordion-header");
    
      if (headers.length) {
        const firstContent = headers[0].nextElementSibling;
        headers[0].classList.add("active");
        firstContent.style.maxHeight = firstContent.scrollHeight + "px";
        toggleSvgIcon(headers[0], true);
      }
    
      headers.forEach(header => {
        header.addEventListener("click", function () {
          const content = this.nextElementSibling;
          const isOpen = this.classList.contains("active");
    
          document.querySelectorAll(".accordion-content").forEach(c => {
            c.style.maxHeight = null;
            toggleSvgIcon(c.previousElementSibling, false);
            c.previousElementSibling.classList.remove("active");
          });
    
          if (!isOpen) {
            this.classList.add("active");
            content.style.maxHeight = content.scrollHeight + "px";
            toggleSvgIcon(this, true);
          } else {
            this.classList.remove("active");
            content.style.maxHeight = null;
            toggleSvgIcon(this, false);
          }
        });
      });
    
      function toggleSvgIcon(header, isOpen) {
        const verticalLine = header.querySelector("path.vertical-line");
        if (verticalLine) {
          verticalLine.style.opacity = isOpen ? "0" : "1";
        }
      }
    });
</script>

{% schema %}
{
  "name": "Tabs with Accordions",
  "settings": [],
  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        { 
          "type": "text", 
          "id": "tab_id", 
          "label": "Tab ID " 
        },
        { 
          "type": "text", 
          "id": "tab_title", 
          "label": "Tab Title"
        }
      ]
    },
    {
      "type": "accordion",
      "name": "Accordion",
      "settings": [
        {
          "type": "text",
          "id": "question",
          "label": "Question"
        },
        {
          "type": "richtext",
          "id": "answer",
          "label": "Answer"
        }
      ]
    }
  ],
  "presets": [
    { 
      "name": "Tabs with Accordions" 
    }
  ]
}
{% endschema %}